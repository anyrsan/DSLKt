apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def isApp = rootProject.ext.isApplication


android {
    compileSdkVersion rootProject.ext.androidVersion.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidVersion.minSdkVersion
        targetSdkVersion rootProject.ext.androidVersion.targetSdkVersion
        versionCode rootProject.ext.androidVersion.versionCode
        versionName rootProject.ext.androidVersion.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "com.any.org.dslkt"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //开启databinding
    dataBinding {
        enabled = true
    }

    buildToolsVersion = '29.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies.kotlinSdk
    implementation rootProject.ext.dependencies.superAppcompat
    implementation rootProject.ext.dependencies.superXCore
    implementation rootProject.ext.dependencies.superConstraintlayout
    testImplementation rootProject.ext.dependencies.junitSdk
    androidTestImplementation rootProject.ext.dependencies.testRunAndroidSdk
    androidTestImplementation rootProject.ext.dependencies.esoressoRunAndroidSdk


    //引入基础库
    implementation project(':commonlibrary')

    implementation project(':routercompilecore')
    implementation project(':routerAnnotation')



    //不是app模式时,才添加依赖
    if (!isApp) {
        //引入注解
        kapt project(':routercompile')
        implementation project(':anewsmudle')
        implementation project(':loginmodule')
        implementation project(':usermodule')
        implementation project(':newsmodule')
        implementation project(':readmudole')
    }
}

kapt {
    correctErrorTypes = true
    arguments {
        arg("RouterModule", project.name)
        if (!isApp)
            arg("RouterApp", "${project.name},loginmodule,usermodule,newsmodule,readmudole,anewsmudle")
    }
}
